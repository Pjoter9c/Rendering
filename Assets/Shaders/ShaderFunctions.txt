INCLUDY:
"UnityCG.cginc" - podstawowe funkcje matematyczne (UnityShaderVariables, UnityInstancing, HLSLSupport)
"UnityStandardBRDF.cginc" - jeszcze wi�cej funkcji matematycznych (UnityCG, UnityLightingCommon, UnityStandardConfig)
"UnityStandardUtils.cginc" - kownersja energii (UnityCG, UnityStandardConfig)
"UnityPBSLighting.cginc" - Physically-Based Shading (UnityStandardUtils, UnityStandardBRDF, UnityGlobalIllumination)
"AutoLight.cginc" - operacje na oświetleniu (HLSLSupport, UnityShadowLibrary)

ATRYBUTY W PROPERTIES:
[Gamma] - konwertuje na gamma color space

TAGI:
"LightMode" - jaki model o�wietlenia ma by� u�ywany
	"ForwardBase" - pierwsze przej�cie u�ywane w forward rendering path, daje dost�p do g��wnego �wiat�a directional sceny

PRAGMA:
vertex nazwaFunkcji - vertexShader z podan� nazw�
fragment nazwaFunkcji - fragmentShader z podan� nazw�
target wersja - u�ywany model shaderu, domy�lnie 2.5, wy�sze pozwalaj� na korzystanie z funkcjonalno�ci nowszych gpu ale mo�e nie dzia�a� na starszych https://docs.unity3d.com/560/Documentation/Manual/SL-ShaderCompileTargets.html
multi_compile NAZWA - tworzy warianty shaderu

ZMIENNE:
sampler2D - textura 2D np _MainTex
float4 _MainTex_ST - informacje o tilingu i offsecie zmiennej sampler _MainTex

SEMANTYKI:
position - pozycja lokalna vertexu
sv_position - pozycja vertexu na ekranie
sv_target - finalny kolor pikselu
normal - wektor normalny vertexu
texcoord0 - do przechowywania warto�ci float4 (max texcoord7 lub 15)

TRANSFORMACJE:
UnityObjectToClipPos(position) - pozycja lokalna na pozycj� ekranu
UnityObjectToWorldNormal(normal) - pozycja lokalna wektoru normalnego na pozycj� �wiata (UnityStandardBRDF)
TRANSFORM_TEX - konwertuje coordy uv tak aby zgadza�y si� z tilingiem i offsetem

FUNCKJE:
normalize(vector) - normalizacja wektoru
DotClamped(vector, vector) - dot product w zakresie 0 - 1 (StandardBRDF)
tex2D(sampler2D, uv) - sampluje texture 2d na�o�on� na uv zwracaj�c kolor na danym pikselu
reflect(direction, surfaceN) - zwraca wektor odbicia
EnergyConservationBetweenDiffuseAndSpecular(albedo, _SpecularTint.rgb, oneMinusReflectivity) - upewnia si� �e albedo zachowa w�a�ciw� energi� (StandardUtils)
DiffuseAndSpecularFromMetallic(albedo, _Metallic, specularTint, oneMinusReflectivity) - poprawia o�wietlenie przy metalicznych materia�ach (StandardUtils)
UNITY_BRDF_PBS(diffuseColor, specularColor, oneMinusReflectivity, smoothness, normal, viewDirection, directLight, indirectLight) - zwraca kolor na podstawie podanych parametr�w (PBSLighting, target 3.0)
UNITY_LIGHT_ATTENUATION(attenuation, smth with shadows, worldPos) - oblicza prawidłową attenuację(fading światła wraz z dystansem) Aby prawidłowo działało trzeba dodać #define POINT przed wywołaniem tego

STA�E ZMIENNE
unity_ObjectToWorld - macierz transformacji, pozycja lokalna na �wiata
_WorldSpaceLightPos0 - pozycja aktualnego o�wietlenia
_LightColor0 - kolor aktualnego o�wietlenia (UnityLightingCommon)
_WorldSpaceCameraPos - pozycja kamery w �wiecie (UnityShaderVariables)

STRUKTURY:
UnityLight(color, dir, ndotl) - kolor�wiat�a, kierunek�wiat�a, DotClamped(normal, kierunek�wiat�a), struktura �wiat�a u�ywana do przesy�ania informacji w shaderach (LightingCommon)
UnityIndirect(diffuse, specular) - ambientLight, environmental reflections, struktura �wiat�a niebezpo�redniego